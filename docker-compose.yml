
services:
  proxy:
      image: traefik:v2.11
      command: --providers.docker
      ports:
        - 80:80
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  server:
    container_name: server
    build: 
      context: ./server
      dockerfile: docker/Dockerfile 
    environment: 
      - DATABASE_DB=${DATABASE_DB}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
    ports: 
      - '3000:3000' 
    depends_on: 
      - db 
    volumes:
      - ./server:/app
      - /app/node_modules

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - db

  migrate-dev:
    image: ${CI_REGISTRY_IMAGE:-web_app}/migrate:${CI_COMMIT_SHORT_SHA:-latest}
    build:
      context: ./server
      dockerfile: docker/Dockerfile
      args:
        NPM_LOG_LEVEL: notice
    command:
      - /bin/sh
      - -c
      - npx prisma migrate dev --name migrationdata && npx prisma migrate deploy
      # - && npx prisma generate && npm run seed
    working_dir: /app
    tty: true
    stdin_open: true
    volumes:
      - ./server/prisma:/app/prisma
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: docker/Dockerfile
    ports:
      - "5173:5173"
    develop:
      watch:
        - path: ./client/src
          action: sync
          target: /usr/local/app/src
        - path: ./client/package.json
          action: rebuild
    volumes:
      - ./client:/usr/local/app
volumes:
  postgres: